FROM node:20-alpine AS base 

FROM base AS deps

RUN apk add --no-cache libc6-compat
WORKDIR /app

COPY prisma ./
COPY package.json package-lock.json* ./

RUN npm install --production
RUN npm install sharp
RUN npm uninstall tailwindcss postcss autoprefixer
RUN npm install tailwindcss@latest postcss@latest autoprefixer@latest

RUN npx tailwindcss init -p

RUN npm uninstall tailwindcss postcss autoprefixer
RUN npm install tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9

FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

RUN SKIP_ENV_VALIDATION=1 npm run build

FROM base AS runner
WORKDIR /app
ENV NODE_ENV=production

RUN command addgroup --system --gid 1001 nodejs
RUN command adduser --system --uid 1001 nextjs

COPY --from=builder /app/public ./public
RUN mkdir .next
RUN chown nextjs:nodejs .next 

COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 8080
ENV PORT=8080

ENV HOSTNAME="0.0.0.0"

RUN npm run prisma:generate

CMD ["node", "server.js"]